//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace View.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Digital_AppEntities : DbContext
    {
        public Digital_AppEntities()
            : base("name=Digital_AppEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<bank_branch> bank_branch { get; set; }
        public virtual DbSet<bank_info> bank_info { get; set; }
        public virtual DbSet<CardName> CardNames { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CompanyInfo> CompanyInfoes { get; set; }
        public virtual DbSet<COUNTRY_INFO> COUNTRY_INFO { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<DISTRICTINFO> DISTRICTINFOes { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<FarmerInfo> FarmerInfoes { get; set; }
        public virtual DbSet<ItemInfo> ItemInfoes { get; set; }
        public virtual DbSet<ItemPurchaseDtl> ItemPurchaseDtls { get; set; }
        public virtual DbSet<ItemPurchaseMst> ItemPurchaseMsts { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }
        public virtual DbSet<ProductReceivedDtl> ProductReceivedDtls { get; set; }
        public virtual DbSet<ProductReceivedMst> ProductReceivedMsts { get; set; }
        public virtual DbSet<PurchaseHistory> PurchaseHistories { get; set; }
        public virtual DbSet<SalaryPaymentDtl> SalaryPaymentDtls { get; set; }
        public virtual DbSet<SalaryPaymentMst> SalaryPaymentMsts { get; set; }
        public virtual DbSet<SalesDetail> SalesDetails { get; set; }
        public virtual DbSet<SalesMaster> SalesMasters { get; set; }
        public virtual DbSet<Stock> Stocks { get; set; }
        public virtual DbSet<SubCategory> SubCategories { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<TaxCategory> TaxCategories { get; set; }
        public virtual DbSet<THANAINFO> THANAINFOes { get; set; }
        public virtual DbSet<UOM> UOMs { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<UTL_USERINFO> UTL_USERINFO { get; set; }
        public virtual DbSet<DIVISION_CODE> DIVISION_CODE { get; set; }
        public virtual DbSet<UTL_MODULES> UTL_MODULES { get; set; }
        public virtual DbSet<UTL_USERGRANT> UTL_USERGRANT { get; set; }
        public virtual DbSet<CustomerInformation> CustomerInformations { get; set; }
        public virtual DbSet<OrderInfoForMoneyReceipt> OrderInfoForMoneyReceipts { get; set; }
        public virtual DbSet<View_GetItemPurchaseDetails> View_GetItemPurchaseDetails { get; set; }
        public virtual DbSet<View_GetItemPurchaseMst> View_GetItemPurchaseMst { get; set; }
        public virtual DbSet<View_ItemPurchaseHistoryorStatus> View_ItemPurchaseHistoryorStatus { get; set; }
        public virtual DbSet<View_ItemStatusDetails> View_ItemStatusDetails { get; set; }
        public virtual DbSet<View_ProductReceivedInformation> View_ProductReceivedInformation { get; set; }
        public virtual DbSet<View_PurchaseInformation> View_PurchaseInformation { get; set; }
        public virtual DbSet<View_ReceivedDetails> View_ReceivedDetails { get; set; }
        public virtual DbSet<ItemWithUOM> ItemWithUOMs { get; set; }
    
        public virtual int GetItemPurchaseDetails(Nullable<short> itemPurchaseMstID)
        {
            var itemPurchaseMstIDParameter = itemPurchaseMstID.HasValue ?
                new ObjectParameter("itemPurchaseMstID", itemPurchaseMstID) :
                new ObjectParameter("itemPurchaseMstID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetItemPurchaseDetails", itemPurchaseMstIDParameter);
        }
    
        public virtual ObjectResult<GetItemPurchaseMst_Result> GetItemPurchaseMst(Nullable<short> pageSize, Nullable<short> pageNum, string searchBy, string keyword)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(short));
    
            var pageNumParameter = pageNum.HasValue ?
                new ObjectParameter("PageNum", pageNum) :
                new ObjectParameter("PageNum", typeof(short));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("searchBy", searchBy) :
                new ObjectParameter("searchBy", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetItemPurchaseMst_Result>("GetItemPurchaseMst", pageSizeParameter, pageNumParameter, searchByParameter, keywordParameter);
        }
    
        public virtual int GetItemPurchaseDetails2(Nullable<short> itemPurchaseMstID)
        {
            var itemPurchaseMstIDParameter = itemPurchaseMstID.HasValue ?
                new ObjectParameter("itemPurchaseMstID", itemPurchaseMstID) :
                new ObjectParameter("itemPurchaseMstID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetItemPurchaseDetails2", itemPurchaseMstIDParameter);
        }
    
        public virtual ObjectResult<GetOrderInfoForMoneyReceipt_Result> GetOrderInfoForMoneyReceipt(string invoiceNo)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderInfoForMoneyReceipt_Result>("GetOrderInfoForMoneyReceipt", invoiceNoParameter);
        }
    }
}
